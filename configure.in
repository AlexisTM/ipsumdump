dnl -*- mode: shell-script; -*-
dnl the usual `configure.in' boilerplate
dnl

AC_INIT(config.h.in)
AC_CONFIG_HEADER(config.h)
AC_SUBST(ac_configure_args)

LIBCLICK_VERSION=1.2.1a
AC_SUBST(LIBCLICK_VERSION)
AC_CONFIG_AUX_DIR(libclick-$LIBCLICK_VERSION)

VERSION=0.1
AC_SUBST(VERSION)

dnl
dnl locate Click install directory
dnl

AC_ARG_WITH(click, [  --with-click[=DIR]      Click is installed under DIR],
  [clickprefix=$withval; if test -z "$withval" -o "$withval" = yes; then clickprefix=$prefix; fi],
  clickprefix=NONE)

dnl Preset $prefix and $exec_prefix.
test "x$prefix" = xNONE && prefix=$ac_default_prefix
test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'

if test "$clickprefix" = NONE; then
    LIBCLICK_TARGET=libclick-$LIBCLICK_VERSION
    CLICK_BUILDTOOL='$(top_srcdir)/'"$LIBCLICK_TARGET"'/click-buildtool'
    CLICK_COMPILE='$(top_builddir)/'"$LIBCLICK_TARGET"'/click-compile'
    CLICKINCLUDES='-I$(top_builddir)/'"$LIBCLICK_TARGET"'/include -I$(top_srcdir)/'"$LIBCLICK_TARGET"'/include'
    CLICKLIB='$(top_builddir)/'"$LIBCLICK_TARGET"'/libsrc/libclick.a'
    AC_CONFIG_SUBDIRS(libclick-$LIBCLICK_VERSION)
else
    LIBCLICK_TARGET=
    CLICK_BUILDTOOL="${clickprefix}/bin/click-buildtool"
    CLICK_COMPILE="${clickprefix}/bin/click-compile"
    CLICKINCLUDES=
    CLICKLIB="-L${clickprefix}/lib -lclick"
fi

AC_SUBST(LIBCLICK_TARGET)
AC_SUBST(CLICK_BUILDTOOL)
AC_SUBST(CLICK_COMPILE)
AC_SUBST(CLICKINCLUDES)
AC_SUBST(CLICKLIB)

#if test ! -r $CLICKINCLUDES/click/pathvars.h ; then
#  AC_MSG_ERROR([
#Can't read \`$CLICKINCLUDES/click/pathvars.h'!
#(Are you sure \`$CLICKINCLUDES' is a Click install directory?)])
#fi


dnl
dnl Are Click sources available?
dnl

AC_ARG_WITH(click-build, [  --with-click-build=DIR  DIR is Click build directory],
  [clickbuilddir=$withval], clickbuilddir=NONE)

if test "x$clickbuilddir" != x -a "x$clickbuilddir" != xNONE; then
    if test ! -r $clickbuilddir/config.status; then
	AC_MSG_ERROR([$clickbuilddir is not a Click build directory!])
    fi
    clicksrcdir=`grep '^top_srcdir' $clickbuilddir/Makefile | sed 's/top_srcdir = //'`
    if echo "$clicksrcdir" | grep '^\.' >/dev/null 2>&1; then
	clicksrcdir="$clickbuilddir/$clicksrcdir"
    fi
fi

AC_SUBST(clicksrcdir)
AC_SUBST(clickbuilddir)


dnl
dnl The rest of this file is based on Click `configure.in'. You shouldn't
dnl generally need to change it, although you may want to add to it.
dnl

AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_CXXCPP

AC_PATH_PROG(AR, ar)
AC_PATH_PROG(LD, ld)
AC_PATH_PROG(RANLIB, ranlib, :)
AC_PATH_PROG(STRIP, strip, :)

AC_PROG_INSTALL


dnl
dnl check for install -C
dnl

AC_MSG_CHECKING(whether install accepts -C)
echo X > conftest.1
if $INSTALL -C conftest.1 conftest.2 >/dev/null 2>&1; then
  INSTALL_IF_CHANGED="$INSTALL -C"
  AC_MSG_RESULT(yes)
else
  INSTALL_IF_CHANGED="$INSTALL"
  AC_MSG_RESULT(no)
fi
AC_SUBST(INSTALL_IF_CHANGED)


dnl
dnl check suitability of the C++ compiler
dnl

if test -z "$GXX"; then
  AC_MSG_WARN(Your C++ compiler ($CXX) is not a GNU C++ compiler!
Either set the "'`'"CXX' environment variable to tell me where
[a GNU C++ compiler is, or compile at your own risk.
(This code uses a few GCC extensions and GCC-specific compiler options,
and Linux header files are GCC-specific.)])
fi

AC_LANG_CPLUSPLUS
AC_CACHE_CHECK(for recent version of C++, ac_cv_good_cxx,
  AC_TRY_COMPILE([], [#ifdef __GNUG__
#if (__GNUC__ == 2) && (__GNUC_MINOR__ <= 7)
#error "fuckers! fuckers!"
#endif
#endif
return 0;], ac_cv_good_cxx=yes, ac_cv_good_cxx=no))
if test "$ac_cv_good_cxx" != yes; then
  AC_MSG_ERROR(Your GNU C++ compiler ($CXX) is too old!
[Either download a newer compiler, or tell me to use a different compiler
by setting the "'`'"CXX' environment variable and rerunning me.])
fi

AC_CACHE_CHECK(for working new.h, ac_cv_good_new_h,
  AC_TRY_LINK([#include <new.h>], [
  int a;
  int *b = new(&a) int;
  return 0;
], ac_cv_good_new_h=yes, ac_cv_good_new_h=no))
if test "$ac_cv_good_new_h" = yes; then
  AC_DEFINE(HAVE_NEW_H)
fi

CPPFLAGS="$CPPFLAGS"
if test -n "$GCC"; then
  CC="$CC -Wall"
fi
if test -n "$GXX"; then
  CXX="$CXX -Wp,-w -W -Wall"; KERNEL_CXX="$CXX -w -Wall"
else
  KERNEL_CXX="$CXX"
fi
if test -n "$GXX"; then
  CXXFLAGS="-fno-exceptions -fno-rtti -fvtable-thunks $CXXFLAGS"
fi
AC_SUBST(KERNEL_CXX)


dnl
dnl find autoconf
dnl

missing_dir=`cd $srcdir && pwd`

AC_MSG_CHECKING(for working autoconf)
AUTOCONF=${AUTOCONF-autoconf}
if ($AUTOCONF --version) < /dev/null > conftest.out 2>&1; then
  if test `head -1 conftest.out | sed 's/.*2\.\([[0-9]]*\).*/\1/'` -ge 13 2>/dev/null; then
    AC_MSG_RESULT(found)
  else
    AUTOCONF="$missing_dir/missing autoconf"
    AC_MSG_RESULT(old)
  fi
else
  AUTOCONF="$missing_dir/missing autoconf"
  AC_MSG_RESULT(missing)
fi

AC_SUBST(AUTOCONF)


dnl
dnl make FLAGS variables without `-g'
dnl

CFLAGS_NDEBUG=`echo "$CFLAGS" | sed 's/-g//'`
CXXFLAGS_NDEBUG=`echo "$CXXFLAGS" | sed 's/-g//'`
AC_SUBST(CFLAGS_NDEBUG)
AC_SUBST(CXXFLAGS_NDEBUG)


dnl
dnl check for GNU make
dnl

if test ${GMAKE-NO} = NO; then
  AC_CACHE_CHECK(for GNU make, ac_cv_gnu_make,
[if /bin/sh -c 'make -f /dev/null -n --version | grep GNU' >/dev/null 2>&1; then
  ac_cv_gnu_make='make'
elif /bin/sh -c 'gmake -f /dev/null -n --version | grep GNU' >/dev/null 2>&1; then
  ac_cv_gnu_make='gmake'
else
  AC_MSG_RESULT(not found)
  AC_MSG_ERROR(can't find GNU make. Either put "'`'"gmake' on your PATH and
rerun "'`'"./configure', or set the GMAKE environment variable to
GNU make's pathname.)
fi])
  GMAKE="$ac_cv_gnu_make"
fi

SUBMAKE=''
AC_SUBST(SUBMAKE)
if test $GMAKE != make; then
  AC_MSG_WARN(You must compile with GNU make ("'`'"$GMAKE').)
  SUBMAKE="MAKE = $ac_cv_gnu_make"
fi


dnl
dnl Output
dnl

/bin/rm -rf conftest*
AC_OUTPUT(Makefile src/Makefile)
