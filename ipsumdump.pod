=head1 NAME

ipsumdump - produce ASCII summary of network traffic or tcpdump(1) file

=head1 SYNOPSIS

ipsumdump [B<-r> | B<-i> | B<--netflow-summary>] [B<--src>, B<--dst>, B<--sport>, B<--dport>, ...] [other options] [I<files> or I<interfaces>]

=head1 DESCRIPTION

The B<ipsumdump> program reads IP packets from one or more data sources,
then summarizes those packets into a line-based ASCII file. The resulting
summary dump is easy to process with text-based tools.

Here are the first couple of lines from sample B<ipsumdump> output, from
`ipsumdump -sd /home/kohler/largedump.gz':

  !IPSummaryDump 1.0
  !creator "ipsumdump -sd /home/kohler/largedump.gz"
  !host max.lcdf.org
  !starttime 1000943858.353723 (Wed Sep 19 16:57:38 2001)
  !data 'ip src' 'ip dst'
  64.55.139.202 209.247.204.242
  18.26.4.9 64.55.139.202

The `B<-sd>' option tells B<ipsumdump> to log source and destination IP
addresses; `F</home/kohler/largedump.gz>' is a compressed tcpdump(1) file.
Each data line represents a packet; a space separates the two addresses.
The `C<!data>' line describes the contents of each data line.

=head1 OPTIONS

=head2 Data Sources

B<Ipsumdump> can read data from tcpdump(1) files, from live network
interfaces, or from NetFlow summary files. An optional data source option
determines the kind of source B<ipsumdump> will use; any non-option
arguments specify which files, or interfaces, to read. For example,
`ipsumdump B<-r> eth0 eth1' will read two tcpdump(1) files, named "eth0"
and "eth1"; `ipsumdump B<-i> eth0 eth1', on the other hand, will read from
two live network interfaces, "eth0" and "eth1".

=over 4

=item B<--tcpdump>, B<-r>

Read from one or more tcpdump(1) files, and stop when all the files are
exhausted. This is the default. If no filenames are given, or if one of the
filenames is a single dash C<->, reads from the standard input. The files
may be compressed by gzip(1) or bzip2(1); B<ipsumdump> will uncompress them
on the fly.

=item B<--interface>, B<-i>

Read from live network interfaces. When run this way, B<ipsumdump> will
continue until interrupted with SIGINT.

=item B<--netflow-summary>

Read from one or more NetFlow summary files. These are line-oriented ASCII
files; blank lines, and lines starting with `!' or `#', are ignored. Other
lines should contain 15 or more fields separated by vertical bars `|'.
B<Ipsumdump> pays attention to some of these fields:

  Field  Meaning                       Example
  -----  ----------------------------  ----------
  0      Source IP address             192.4.1.32
  1      Destination IP address        18.26.4.44
  5      Packet count in flow          5
  6      Byte count in flow            10932
  7      Flow timestamp (UNIX-style)   998006995
  9      Source port                   3917
  10     Destination port              80
  13     IP protocol                   6
  14     IP TOS bits                   0

=back

=head2 Dump Contents

These options determine what actually goes in the dump. You can supply an
arbitrary number of them. If you say `B<-sd>', for example -- or the
equivalent `B<--src --dst>' -- the dump's data lines will contain an IP
source address, a space, and an IP destination address:

    192.168.1.101 18.26.4.44

=over 4

=item B<--timestamp>, B<-t>

Include packet timestamp in the dump. Example: C<1000212480.005813>.

=item B<--src>, B<-s>

Include IP source address in the dump. Example: C<192.168.1.101>.

=item B<--dst>, B<-d>

Include IP destination address in the dump. Example: C<18.26.4.44>.

=item B<--sport>, B<-S>

Include TCP or UDP source port in the dump. Example: C<8928>. For non-TCP
or UDP packets, this field is a single dash C<->.

=item B<--dport>, B<-D>

Include TCP or UDP destination port in the dump. Example: C<80>.

=item B<--length>, B<-l>

Include packet length in the dump. Example: C<1536>.

=item B<--protocol>, B<-p>

Include IP protocol in the dump. Can be C<T> for TCP, C<U> for UDP,
C<I> for ICMP, or a number for some other protocol.

=item B<--id>

Include IP ID field in the dump. Example: C<19371>.

=item B<--tcp-seq>, B<-Q>

Include TCP sequence number in the dump. Example: C<4009339012>. For
non-TCP packets, this field is a single dash C<->.

=item B<--tcp-ack>, B<-K>

Include TCP acknowledgement number in the dump. Example: C<4009339012>.
For non-TCP packets, this field is a single dash C<->.

=item B<--tcp-flags>, B<-F>

Include TCP flags byte in the dump. Example: C<54>. For non-TCP
packets, this field is a single dash C<->.

=item B<--payload-length>, B<-L>

Include length of packet payload in the dump. This is the length of the TCP
or UDP payload, for TCP or UDP packets, or the length of the IP payload,
for other IP packets. Example: C<1000>.

=item B<--packet-count>, B<-c>

Include packet count in the dump. Some kinds of logs -- such as NetFlow
summary logs -- record information about flows, not packets. A flow
represents multiple packets; the packet count says exactly how many.
Example: C<1>.

=back

=head2 Other Options

=over 4

=item B<--output>=I<file>, B<-o> I<file>

Write the summary dump to I<file> instead of to the standard output.

=item B<--filter>=I<filter>, B<-f> I<filter>

Only include packets and flows matching a tcpdump(1) I<filter>. For
example, `ipsumdump B<-f> "tcp && src net 18/8"' will summarize data only
for TCP packets from net 18. (The syntax for I<filter> is currently a
subset of tcpdump's syntax.)

=item B<--anonymize>, B<-A>

Anonymize IP addresses in the output. The anonymization preserves prefix
and class. This means, first, that two anonymized addresses will share the
same prefix when their non-anonymized counterparts share the same prefix;
and second, that anonymized addresses will be in the same class (A, B, C,
or D) as their non-anonymized counterparts. The anonymization algorithm
comes from tcpdpriv(1).

=item B<--map-address>=I<addrs>

I<addrs> is a space- or comma-separated list of IP addresses and/or
prefixes. When the summary dump completes, B<ipsumdump> will write those
addresses to the standard error, paired with their anonymized counterparts.

=item B<--write-tcpdump>=I<file>, B<-w> I<file>

Write processed packets to a tcpdump(1) I<file>, or to the standard output,
if I<file> is a single dash C<->. This is in addition to the usual summary
output.

=item B<--config>

Do not produce a summary. Instead, write the Click configuration that
B<ipsumdump> would run to the standard output.

=item B<--verbose>, B<-V>

Produce more verbose error messages.

=item B<--help>, B<-h>

Print a help message to the standard output, then exit.

=item B<--version>, B<-v>

Print version number and license information to the standard output, then
exit.

=back

=head1 EXAMPLES

=head1 SEE ALSO

tcpdump(1), tcpdpriv(1)

=head1 AUTHOR

Eddie Kohler <kohler@aciri.org>, based on the Click modular router. See
http://www.pdos.lcs.mit.edu/click/ for more on Click.

Anonymization algorithm from tcpdpriv(1) by Greg Minshall.
